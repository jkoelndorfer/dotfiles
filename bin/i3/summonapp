#!/bin/bash

# This script assists with summoning and dismissing an application in i3.
# If the app is the active window, it is pushed to another workspace.
# If the app is not open at all, it is opened.
# If the app is open on another workspace, it is pulled to the current
# workspace.

sleep_interval='0.1'
cd $(dirname "${BASH_SOURCE[0]}")

function app_focused() {
    [[ "$(./focusedwin | jq -r '.class')" == "$app_window_class" ]]
}

function dismiss_app() {
    i3-msg "[class=\"$app_window_class\"]" move scratchpad
}

function app_win_id() {
    local jq_query="recurse(.nodes[], .floating_nodes[].nodes[]) | select(.window_properties.class == \"$app_window_class\") | .id"
    i3-msg -t get_tree | jq -r "$jq_query"
}

if app_focused; then
    dismiss_app
    exit 0
fi

active_workspace="$(i3-msg -t get_workspaces | jq -r '.[] | select(.focused == true)')"
active_workspace_width="$(echo "$active_workspace" | jq -r '.rect.width')"
active_workspace_height="$(echo "$active_workspace" | jq -r '.rect.height')"

if ! pgrep -a "$app_cmd" | grep -v /bin/bash >/dev/null 2>&1; then
    "$app_cmd" >/dev/null 2>&1 & disown
fi
while [[ -z "$(app_win_id)" ]]; do
    sleep "$sleep_interval"
done

# This sleep is necessary so that the first startup of the app actually displays a window.
# Without it, this script must be invoked twice. The first time will start KeePass and flicker its
# border on the screen. The second time will actually summon the window.
#
# TODO: Figure out if there are better criteria we can use in app_win_id to make this not
# a problem.
sleep 0.25

i3-msg "[class=\"$app_window_class\"]" scratchpad show
./floatgrid "$app_vertical_position" "$app_horizontal_position" "$(app_width)" "$(app_height)" "$(app_win_id)"
while app_focused; do
    sleep "$sleep_interval"
done
dismiss_app
