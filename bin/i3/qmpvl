#!/bin/bash

# qmpvl - qutebrowser mpv launcher
# This script is intended to be invoked by qutebrowser to launch mpv.
video="$1"

script_dir=$(dirname "$(readlink -f "$0")")
cd "$script_dir"

mpv_ipc="$XDG_RUNTIME_DIR/mpv.ipc"

function mpv_cmd() {
    tries=0
    while [[ ! -e "$mpv_ipc" ]]; do
        sleep 0.1
        tries=$(( tries + 1 ))
        if [[ "$tries" -gt 20 ]]; then
            echo "$0: timed out waiting for mpv command socket to appear" >&2
            exit 11
        fi
    done
    echo "$@" | socat - "$mpv_ipc"
}

# mpv does not like being given an empty playlist on initialization. Let's
# trick it with a blank webm.
#
# This is a large-ish workaround to ensure that our video playback is
# always triggered via the FIFO. It makes breakage a little more apparent
# and less confusing.
#
# Also keeps video URLs from appearing in our process name. Privacy,
# I guess.
blank_webm=$(echo "
1a45dfa340204286810142f7810142f2810442f38108428240047765626d4287
81024285810218538067408d1549a96640282ad7b140030f42404d8040067768
616d6d79574140067768616d6d7944894008408f4000000000001654ae6b4031
ae402ed7810163c581019c810022b59c4003756e64864005565f565038258688
4003565038838101e04006b08108ba81081f43b6754022e78100a3401c810000
803001009d012a0800080001402625a400037000fefcf40000
" | tr -cd '[a-z0-9]')

remove_null_video=0
# If mpv is already open, don't start it.
#
# This check isn't perfect but it should be good enough for almost
# all use cases.
if ! pgrep -fu "$USER" "$mpv_ipc"; then
    remove_null_video=1
    rm -f "$mpv_ipc"

    # Switch to the i3 workspace "video" so that mpv opens there
    ./i3swaymsg workspace video

    if [[ ! -t 0 ]]; then
        # mpv seems to suffer some issues in the current version when stdin/stdout
        # aren't connected to a terminal and aren't redirected.
        #
        # I'm seeing mpv crash immediately when being launched via a qutebrowser
        # keybinding. To work around that, only redirect stdout and stderr
        # when not launched via a terminal.
        redirect_stdout='/dev/null'
        redirect_stderr='/dev/null'
    else
        redirect_stdout='&1'
        redirect_stderr='&2'
    fi

    size_10_mib=10485760
    # --force-window='immediate' makes mpv open a window immediately.
    # Typically mpv waits until it has buffered some amount of video
    # before opening the mpv window.
    #
    # --keep-open keeps mpv from quitting when it reaches the end of
    # the playlist.
    #
    # --keep-open-pause='no' prevents mpv from pausing when it reaches the
    # end of the playlist. This is required so that mpv will automatically
    # play a newly added video after reaching the end of its playlist.
    mpv --force-window='immediate' --keep-open --keep-open-pause='no' --input-ipc-server="$mpv_ipc" \
        --cache=yes --demuxer-max-bytes="$size_10_mib" \
        "hex://$blank_webm" >"$redirect_stdout" 2>"$redirect_stderr" & disown
else
    notify-send -u normal -t 3000 'mpv: added to playlist' "Added video to playlist: $video"
fi
mpv_cmd "loadfile $video append-play"
if [[ "$remove_null_video" == 1 ]]; then
    mpv_cmd "playlist-remove 0"
fi
