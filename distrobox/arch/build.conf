distrobox_name='arch'
src_image='archlinux:latest'
image_name='johnk-archlinux'
build_phases=(
	base
	aurhelper
	install
	config
	distrobox_init
)
addl_distrobox_args=(
	--pre-init-hooks '/usr/local/bin/johnk-distrobox-pre-init'
	--init-hooks '/usr/local/bin/johnk-distrobox-init'
)
exported_commands=(
	/usr/bin/wl-copy
	/usr/bin/xclip
)
rootful_container=true

# Taken from https://github.com/89luca89/distrobox/blob/3bac964bf0952674848dce170af8b41d743abe57/distrobox-init#L1195-L1238
#
# These are required for a proper Distrobox container.
base_packages=(
	bash
	bash-completion
	bc
	curl
	diffutils
	findutils
	glibc
	glibc-locales
	gnupg
	iputils
	inetutils
	keyutils
	less
	lsof
	man-db
	man-pages
	mlocate
	mtr
	ncurses
	nss-mdns
	openssh
	pacman
	pigz
	pinentry
	procps-ng
	rsync
	shadow
	sudo
	tcpdump
	time
	traceroute
	tree
	tzdata
	unzip
	util-linux
	util-linux-libs
	vte-common
	wget
	words
	xorg-xauth
	zip
	mesa
	vulkan-intel
	vulkan-radeon
)

# These packages are required to install the AUR helper.
aur_helper_packages=(
	base-devel
)

personal_packages=(
	aws-cli

	# Provides `dig`
	bind

	bitwarden-cli
	cabextract
	devtools
	fzf
	git
	jujutsu
	man-db
	mise
	neovim
	podman
	podman-compose
	python3
	ripgrep
	tmux
	which
	whois
	zsh

	# Needed for clipboard automation -- specifically supporting tmux-yank [1].
	# The binaries from these packages need to be exported back to the host system.
	#
	# [1]: https://github.com/tmux-plugins/tmux-yank
	xclip
	wl-clipboard
)

function install_packages() {
	local working_ctr=$1
	local bin=$2
	shift 2

	buildah run "$working_ctr" -- "$bin" -Syu "${opt_args[@]}" --noconfirm "$@"
}

function export_command() {
	local cmd=$1

	distrobox-enter "$distrobox_name" -e /usr/bin/distrobox-export --bin "$cmd"
}

function build_phase_base() {
	# In Arch's docker container image, pacman is configured to skip
	# extracting documentation. Override this behavior.
	#
	# See:
	#
	# * https://github.com/archlinux/archlinux-docker/blob/61cb892bfc251e46f73e716ceb3b903ec4e9e725/pacman-conf.d-noextract.conf
	# * https://github.com/89luca89/distrobox/blob/3bac964bf0952674848dce170af8b41d743abe57/distrobox-init#L1182-L1186
	buildah run "$1" -- sed -i -e '/NoExtract/d' /etc/pacman.conf

	# --disable-sandbox is needed for pacman to work correctly
	# with older kernels.
	#
	# See https://bbs.archlinux.org/viewtopic.php?id=299402.
	buildah run "$1" -- sed -i -e 's/#DisableSandbox/DisableSandbox/' /etc/pacman.conf

	install_packages "$1" 'pacman' "${base_packages[@]}"
}

function build_phase_aurhelper() {
	install_packages "$1" 'pacman' "${aur_helper_packages[@]}"
	buildah copy "$1" 'files/usr/local/bin/aurhelper-install' '/usr/local/bin/aurhelper-install'
	buildah run "$1" -- '/usr/local/bin/aurhelper-install'
}

function build_phase_install() {
	install_packages "$1" 'paru' "${personal_packages[@]}"
}

function build_phase_config() {
	buildah copy "$1" 'files/etc/profile.d/99-exec-zsh.sh' '/etc/profile.d/99-exec-zsh.sh'
	buildah copy "$1" 'files/etc/locale.gen' '/etc/locale.gen'
	buildah copy "$1" 'files/etc/locale.conf' '/etc/locale.conf'
	buildah run "$1" -- locale-gen
	buildah run "$1" -- mandb -c
}

function build_phase_distrobox_init() {
	buildah copy "$1" 'files/usr/local/bin/johnk-distrobox-pre-init' '/usr/local/bin/johnk-distrobox-pre-init'
	buildah copy "$1" 'files/usr/local/bin/johnk-distrobox-init' '/usr/local/bin/johnk-distrobox-init'
}

# vim: noet ft=bash
